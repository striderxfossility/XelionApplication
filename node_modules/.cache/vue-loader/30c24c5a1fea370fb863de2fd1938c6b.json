{"remainingRequest":"C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jelle\\Desktop\\Xelion Plugin\\src\\Home.vue?vue&type=template&id=2380d2d8&scoped=true&","dependencies":[{"path":"C:\\Users\\jelle\\Desktop\\Xelion Plugin\\src\\Home.vue","mtime":1578929404874},{"path":"C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jelle\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}